name: Package and Deploy Functions

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    env:
      ZIP_NAME: function-source.zip
      BUCKET_NAME: function-bucket-quiosquefood
      PROJECT_ID: ${{ secrets.GCP_PROJECT || 'quiosquefood3000' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd functions
          npm ci || true

      - name: Create ZIP package
        run: |
          cd functions
          zip -r ../${{ env.ZIP_NAME }} .

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      # PRIMEIRO: Inicializar o Terraform
      - name: Terraform Init
        run: terraform -chdir=terraform init

      # SEGUNDO: Importar recursos existentes automaticamente
      - name: Import existing resources
        run: |
          cd terraform
          # Importar bucket se existir
          terraform import google_storage_bucket.function_bucket ${{ env.BUCKET_NAME }} || true
          
          # Importar funções se existirem
          terraform import google_cloudfunctions_function.create_customer projects/${{ env.PROJECT_ID }}/locations/us-central1/functions/create-customer || true
          terraform import google_cloudfunctions_function.get_customer projects/${{ env.PROJECT_ID }}/locations/us-central1/functions/get-customer || true
          terraform import google_cloudfunctions_function.update_customer projects/${{ env.PROJECT_ID }}/locations/us-central1/functions/update-customer || true
          terraform import google_cloudfunctions_function.delete_customer projects/${{ env.PROJECT_ID }}/locations/us-central1/functions/delete-customer || true

      - name: Terraform Plan Infrastructure
        run: terraform -chdir=terraform plan -target=google_storage_bucket.function_bucket

      - name: Terraform Apply Infrastructure
        run: terraform -chdir=terraform apply -target=google_storage_bucket.function_bucket -auto-approve

      # TERCEIRO: Upload do ZIP - CORRIGIDO
      - name: Upload ZIP to Google Cloud Storage
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: ${{ env.ZIP_NAME }}
          destination: ${{ env.BUCKET_NAME }}
          gzip: false
          resumable: true

      # QUARTO: Verificar se o arquivo foi enviado corretamente
      - name: Verify ZIP upload
        run: |
          gsutil ls gs://${{ env.BUCKET_NAME }}/
          
      # QUINTO: Aplicar o resto da infraestrutura
      - name: Terraform Plan Complete
        run: terraform -chdir=terraform plan

      - name: Terraform Apply Complete
        run: terraform -chdir=terraform apply -auto-approve
